apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

sourceCompatibility = 1.6

version = '1.2.0-SNAPSHOT'
group = 'org.vbossica'

ext.projectUrl = 'http://github.com/vbossica/springbox'
ext.years = '2012-2013'

ext.commonsCliVersion = '1.2'
ext.commonsLangVersion = '2.5'
ext.junitVersion = '4.8.2'
ext.metricsVersion = '3.0.0-BETA2'
ext.reflectionsVersion = '0.9.8'
ext.servletVersion = '2.5'
ext.springVersion = '3.2.2.RELEASE'

repositories {
  maven {
    url = 'http://oss.sonatype.org/content/repositories/snapshots'
  }
  mavenCentral()
}

configurations {
  provided
  testCompile.extendsFrom(provided)
}

dependencies {
  provided "commons-cli:commons-cli:${ commonsCliVersion }",
           "commons-lang:commons-lang:${ commonsLangVersion }",
           "org.reflections:reflections:${ reflectionsVersion }",
           "org.springframework:spring-context:${ springVersion }",
           "org.springframework:spring-tx:${ springVersion }"

  // libraries for metrics
  provided "com.codahale.metrics:metrics-json:${ metricsVersion }",
           "com.codahale.metrics:metrics-healthchecks:${ metricsVersion }",
           "com.codahale.metrics:metrics-jvm:${ metricsVersion }",
           "javax.servlet:servlet-api:${ servletVersion }",
           "org.springframework:spring-webmvc:${ springVersion }"

  testCompile "junit:junit:${ junitVersion }",
              "org.springframework:spring-test:${ springVersion }"
}

sourceSets {
  main {
    compileClasspath += [configurations.provided]
  }
}

javadoc {
  classpath = configurations.provided
  options.overview = "src/main/java/overview.html"
}

task sourcesJar(type: Jar, dependsOn:classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "${repoUrl}") {
        authentication(userName: "${repoUsername}", password: "${repoPassword}")
      }
      pom.project {
        name 'springbox - utility classes for the Spring framework'
        inceptionYear years
        url projectUrl

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
      }
    }
  }
}

tasks.idea.dependsOn(cleanIdea)
idea {
  module {
    excludeDirs += file('.settings')
    scopes.PROVIDED.plus += [configurations.provided]
  }
  project.ipr {
    withXml { provider ->
      def component = provider.node.component.find { it.@name == 'VcsDirectoryMappings' }
      component.mapping.@directory = '$PROJECT_DIR$'
      component.mapping.@vcs = 'Git'
    }
  }
}
